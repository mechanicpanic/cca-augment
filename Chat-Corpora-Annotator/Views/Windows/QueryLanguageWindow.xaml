<Window x:Class="ChatCorporaAnnotator.Views.Windows.QueryLanguageWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Icon="/Resources/Icons/MainWindowIcon.png"
        Title="Run Matcher"
        Width="800" Height="450"
        MinWidth="725" MinHeight="400">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction PassEventArgsToCommand="True" Command="{Binding DeactivateWindowCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <UniformGrid Background="AliceBlue">
        <Grid Margin="0, 5, 5, 5">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="400"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="2*" MinWidth="300"/>
            </Grid.ColumnDefinitions>

            <GridSplitter
                Grid.Column="1"
                Width="3">
            </GridSplitter>

            <Grid Grid.Row="0" Grid.Column="0">
                <Grid.Resources>
                    <Style TargetType="Button" x:Key="RedButton" BasedOn="{StaticResource GhostRedBorderButton}">
                        <Setter Property="Margin" Value="5, 0, 0, 5"/>
                    </Style>

                    <Style TargetType="Button" x:Key="GreenButton" BasedOn="{StaticResource GhostGreenBorderButton}">
                        <Setter Property="Margin" Value="5, 0, 0, 5"/>
                    </Style>

                    <Style TargetType="Button" x:Key="BlueButton" BasedOn="{StaticResource GhostBlueBorderButton}">
                        <Setter Property="Margin" Value="5, 0, 0, 5"/>
                    </Style>

                    <Style TargetType="Button" BasedOn="{StaticResource BlueCircleButton}">
                        <Setter Property="Margin" Value="5, 0, 0, 5"/>
                    </Style>
                </Grid.Resources>

                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="120"/>
                    <RowDefinition Height="32"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.3*"/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button Name="SelectBtn"
                            Grid.Column="0"
                            Content="select"
                            Style="{StaticResource RedButton}"
                            Background="{Binding SelectBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=SelectBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="AndBtn"
                            Grid.Column="1"
                            Content="and"
                            Style="{StaticResource RedButton}"
                            Background="{Binding AndBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=AndBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="OrBtn"
                            Grid.Column="2"
                            Content="or"
                            Style="{StaticResource RedButton}"
                            Background="{Binding OrBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=OrBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="NotBtn"
                            Grid.Column="3"
                            Content="not"
                            Style="{StaticResource RedButton}"
                            Background="{Binding NotBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=NotBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="NumBtn"
                            Grid.Column="4"
                            Content="num"
                            Style="{StaticResource GreenButton}"
                            Background="{Binding NumBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=NumBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="CommaBtn"
                            Grid.Column="5"
                            Content=","
                            Style="{StaticResource GreenButton}"
                            Background="{Binding CommaBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=CommaBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="SemicolonBtn"
                            Grid.Column="6"
                            Content=";"
                            Style="{StaticResource GreenButton}"
                            Background="{Binding SemicolonBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=SemicolonBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="LeftBracketBtn"
                            Grid.Column="7"
                            Content="("
                            Style="{StaticResource GreenButton}"
                            Background="{Binding LeftBracketBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=LeftBracketBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="RightBracketBtn"
                            Grid.Column="8"
                            Content=")"
                            Style="{StaticResource GreenButton}"
                            Background="{Binding RightBracketBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=RightBracketBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Button Name="HasWordOfDictBtn"
                            Grid.Row="0"
                            Grid.Column="0"
                            Content="haswordofdict()"
                            Style="{StaticResource BlueButton}"
                            Background="{Binding HasWordOfDictBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=HasWordOfDictBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="HasUserMentionedBtn"
                            Grid.Row="1"
                            Grid.Column="0"
                            Content="hasusermentioned()"
                            Style="{StaticResource BlueButton}"
                            Background="{Binding HasUserMentionedBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=HasUserMentionedBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="ByUserBtn"
                            Grid.Row="2"
                            Grid.Column="0"
                            Content="byuser()"
                            Style="{StaticResource BlueButton}"
                            Background="{Binding ByUserBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=ByUserBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="InwinBtn"
                            Grid.Row="3"
                            Grid.Column="0"
                            Content="inwin"
                            Style="{StaticResource BlueButton}"
                            Background="{Binding InwinBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=InwinBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="HasOrganizationBtn"
                            Grid.Row="0"
                            Grid.Column="1"
                            Content="hasorganization()"
                            Style="{StaticResource BlueButton}"
                            Background="{Binding HasOrganizationBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=HasOrganizationBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="HasTimeBtn"
                            Grid.Row="1"
                            Grid.Column="1"
                            Content="hastime()"
                            Style="{StaticResource BlueButton}"
                            Background="{Binding HasTimeBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=HasTimeBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="HasLocationBtn"
                            Grid.Row="2"
                            Grid.Column="1"
                            Content="haslocation()"
                            Style="{StaticResource BlueButton}"
                            Background="{Binding HasLocationBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=HasLocationBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>

                    <Button Name="HasDateBtn"
                            Grid.Row="3"
                            Grid.Column="1"
                            Content="hasdate()"
                            Style="{StaticResource BlueButton}"
                            Background="{Binding HasDateBtnBackground}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseDown">
                                <i:InvokeCommandAction
                                    CommandParameter="{Binding ElementName=HasDateBtn}"
                                    Command="{Binding DragButtonCommand}">
                                </i:InvokeCommandAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                </Grid>

                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Column="0"
                        Content="Switch mode"
                        Command="{Binding SwitchModeCommand}">
                    </Button>
                    
                    <Button
                        Grid.Column="1"
                        Content="Import queries"
                        Command="{Binding ImportQueriesCommand}">
                    </Button>
                    
                    <Button
                        Grid.Column="2"
                        Content="Edit dict"
                        Command="{Binding ShowDictionaryEditorCommand}">
                    </Button>
                </Grid>

                <DataGrid
                    Grid.Row="3"
                    Margin="5, 0, 0, 0"
                    Style="{StaticResource BlueGlassDataGrid}"
                    ItemsSource="{Binding UserDictionary}">
                </DataGrid>
            </Grid>

            <Grid Grid.Row="0" Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition MinHeight="100"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="2*" MinHeight="100"/>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Margin="0, 0, 0, 5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Column="0"
                        Content="Clear"
                        Style="{StaticResource OrangeCircleButton}"
                        Command="{Binding ClearQueryCommand}">
                    </Button>

                    <Button
                        Grid.Column="2"
                        Content="Run query"
                        Style="{StaticResource GreenCircleButton}"
                        Command="{Binding RunQueryCommand}">
                    </Button>
                </Grid>

                <Grid Grid.Row="1">

                    <Border Grid.Column="2" BorderThickness="1" BorderBrush="Gray">
                        <ItemsControl ItemsSource="{Binding QueryItems}">

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>

                                    <WrapPanel Background="#FFFCF3FF" AllowDrop="True">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Drop">
                                                <i:InvokeCommandAction
                                                    PassEventArgsToCommand="True"
                                                    Command="{Binding WrapPanelTakeDropCommand}">
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </WrapPanel>

                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ScrollViewer VerticalScrollBarVisibility="auto">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>

                        </ItemsControl>
                    </Border>

                    <Popup
                        StaysOpen="False"
                        Placement="Mouse"
                        IsOpen="{Binding IsQueryItemPopupOpen}"
                        Child="{Binding QueryItemPopupChild}">
                    </Popup>

                    <TextBox
                        Text="{Binding QueryText}"                     
                        Visibility="{Binding QueryTextBoxVisibility}"
                        Style="{StaticResource MultilineTextBox}">
                    </TextBox>
                </Grid>

                <GridSplitter
                    Grid.Row="2"
                    Height="3">
                </GridSplitter>

                <DataGrid Grid.Row="3" Background="White">
                </DataGrid>
            </Grid>

            <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal">
                <TextBlock Margin="5, 0">
                    <Run Text="Found suggestions:"/>
                    <Run Text="{Binding FoundSuggestionsCount, Mode=OneWay}"/>
                </TextBlock>
                
                <TextBlock Margin="5, 0">
                    <Run Text="Found groups:"/>
                    <Run Text="{Binding FoundGroupsCount, Mode=OneWay}"/>
                </TextBlock>

                <TextBlock Margin="5, 0">
                    <Run Text="Suggestion:"/>
                    <Run Text="{Binding CurrentSuggestionIndex, Mode=OneWay}"/>
                    <Run Text="/"/>
                    <Run Text="{Binding SuggestionsCount, Mode=OneWay}"/>
                </TextBlock>
            </StackPanel>

            <Grid Grid.Row="2" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Button
                    Grid.Column="0"
                    Content="ᐸ  Previous suggestion"
                    Style="{StaticResource GhostButton}"
                    Command="{Binding ShowPreviousSuggestionCommand}">
                </Button>

                <Button
                    Grid.Column="1"
                    Content="Next suggestion  ᐳ"
                    Style="{StaticResource GhostButton}"
                    Command="{Binding ShowNextSuggestionCommand}">
                </Button>
            </Grid>

        </Grid>
        
    </UniformGrid>
    
</Window>
